#********************************************************************
# Example streams.conf file for Bitcoin-Sync
#********************************************************************

#********************************************************************
# Kafka Consumer
#********************************************************************

streams.sink.enabled=true

kafka.bootstrap.servers=localhost:9092
kafka.auto.offset.reset=earliest
kafka.group.id=neo4j
kafka.enable.auto.commit=true
kafka.key.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

kafka.fetch.max.wait.ms=500
kafka.fetch.min.bytes=1


#********************************************************************
# Cypher templates
#********************************************************************

# Blocks
streams.sink.topic.cypher.blocks = MERGE (p:Block {hash: event.previousblockhash}) MERGE (b:Block {hash: event.block_hash}) SET b += {hash: event.block_hash, height: event.block_height, blockDate: date(event.block_date), mediantime: datetime(event.block_median_time) } MERGE (p)-[r:PRECEDES]->(b)

# Transactions
streams.sink.topic.cypher.transactions = MERGE (t:Transaction{txid: event.txid}) SET t += {inDegree: event.inDegree, outDegree: event.outDegree, outSum: event.outSum, inSum: event.inSum, date: date(event.block_date)} MERGE (b:Block{hash: event.block_hash}) MERGE (t)-[:BELONGS_TO]->(b) FOREACH (output in event.output_list | MERGE (o_a:Address{address: output.addr}) ON CREATE SET o_a += {inDegree: 1, outDegree: 0} ON MATCH SET o_a += {inDegree: o_a.inDegree + 1} MERGE (t)-[r:RECEIVES{output_nr: output.outNr, value: output.val}]->(o_a)) FOREACH (input in event.input_list | MERGE (i_a:Address{address: input.addr}) ON CREATE SET i_a += {inDegree: 0, outDegree: 1} ON MATCH SET i_a += {outDegree: i_a.outDegree + 1} MERGE (i_a)-[:SENDS{value: input.val}]->(t))
